// Motion

move (10) steps
turn cw (15) degrees
turn right (15) degrees
turn ↻ (15) degrees
turn ccw (15) degrees
turn left (15) degrees
turn ↺ (15) degrees

point in direction (90 v)
point towards [ V]

go to x: (0) y: (0)
go to [ V]
glide (1) secs to x: (0) y: (0)

change x by (10)
set x to (0)
change y by (10)
set y to (0)

if on edge, bounce

(x position)
(y position)
(direction)

motor on for (1) secs
motor on
motor off
motor power (100)
motor direction [this way V]



// Looks

switch to costume [costume2 V]
next costume
switch to background [background1 V]
next background
(costume #)
(background #)

say [Hello!] for (2) secs
say [Hello!]
think [Hmm...] for (2) secs
think [Hmm...]

change [color V] effect by (25)
set [color V] effect to (0)
clear graphic effects

change size by (10)
set size to (100) %
(size)

show
hide

go to front
go back (1) layers



// Sound

play sound [meow V]
play sound [meow V] until done
stop all sounds

play drum (48 v) for (0.2) beats
rest for (0.2) beats

play note (60 v) for (0.5) beats
set instrument to (1 v)

change volume by (-10)
set volume to (100) %
(volume)

change tempo by (20)
set tempo to (60) bpm
(tempo)



// Pen

clear

pen down
pen up

set pen color to [#911a44]
change pen color by (10)
set pen color to (0)

change pen shade by (10)
set pen shade to (50)

change pen size by (1)
set pen size to (1)

stamp



// Control

when gf clicked
when green flag clicked
when flag clicked
when ⚑ clicked
when [space V] key pressed
when Sprite1 clicked

wait (1) secs

forever {

}

repeat (10) {

}

broadcast [ V]
broadcast [ V] and wait
when I receive [ V]

forever if <> {

}

if <> {

}

if <> {

} else {

}

wait until <>

repeat until <> {

}

stop script
stop all
stop all @stopSign



// Sensing

<touching [ V] ?>
<touching color [#911a44]?>
<color [#911a44] is touching [#911a44]?>

ask [What's your name?] and wait
(answer)

(mouse x)
(mouse y)
<mouse down?>

<key [space V] pressed?>

(distance to [ V])

reset timer
(timer)

([x position V] of [Sprite1 V])

(loudness)
<loud?>

([slider V] sensor value)
<sensor [button pressed V] ?>



// Operators

(() + ())
(() - ())
(() * ())
(() / ())

(pick random (1) to (10))

<[] < []>
<[] = []>
<[] > []>

<<> and <>>
<<> or <>>
<not <>>

(join [hello ] [world])
(letter (1) of [world])
(length of [world])

(() mod ())
(round ())

([abs V] of (10))
([sqrt V] of (10))
([sin V] of (10))
([cos V] of (10))
([tan V] of (10))
([asin V] of (10))
([acos V] of (10))
([atan V] of (10))
([ln V] of (10))
([log V] of (10))
([e ^ V] of (10))
([10 ^ V] of (10))




// Variables
(var)

set [var V] to [0]
change [var V] by (1)
show variable [var V]
hide variable [var V]



// List
(list)

add [thing] to [list V]

delete (1 v) of [list V]
insert [thing] at (1 v) of [list V]
replace item (1 v) of [list V] with [thing]

(item (1 v) of [list V])
(length of [list V])
<[list V] contains [thing]>


